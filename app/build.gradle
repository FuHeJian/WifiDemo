plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'wifidemo1.versionPlugin'
}

android {
    namespace 'com.example.wifidemo1'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.wifidemo1"
        minSdk 28
        targetSdk 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                abiFilters 'armeabi-v7a', 'arm64-v8a'
                arguments '-DANDROID_ARM_NEON=TRUE', '-DANDROID_STL=c++_shared'
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
/*    kotlinOptions {
        jvmTarget = '1.8'
    }*/

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    sourceSets{
        main{
            jniLibs.srcDirs = ['src/main/jniLibs', 'libs',"src/main/cpp/jniLibs","src/main/cpp/otherlibs/ffmpeg/libs"]
        }
    }

    //解决依赖冲突，统一版本
    applicationVariants.all { variant ->
        // Return compile configuration objects of a variant.
        variant.getCompileConfiguration().resolutionStrategy {
            // Use Gradle's ResolutionStrategy API
            // to customize how this variant resolves dependencies.

        }
        // Return runtime configuration objects of a variant.
        variant.getRuntimeConfiguration().resolutionStrategy {
            eachDependency { DependencyResolveDetails details ->
                //specifying a fixed version for all libraries with 'org.gradle' group
                if (details.requested.group == "androidx.lifecycle") {
                    details.useVersion '2.5.0'
                }
            }
        }

    }

}



dependencies {

    //引入内部库
    implementation fileTree(include: ['*.jar','*.aar'], dir: 'libs')
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    def navigationVersion = "2.4.0"
    runtimeOnly 'androidx.core:core-ktx:1.9.0'
    implementation 'com.google.android.material:material:1.8.0'
//    noinspection GradleDependency
/*    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
//    noinspection GradleDependency
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"*/

    //rxjava
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'

    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.15.0'
    //apache 通用类
    implementation 'commons-io:commons-io:2.12.0'

    //EventBus
    implementation 'org.greenrobot:eventbus:3.3.0'

    //gson
    implementation 'com.google.code.gson:gson:2.10'

    //utilCodex
    implementation 'com.blankj:utilcodex:1.31.0'

    //mmkv
    implementation 'com.tencent:mmkv:1.2.15'

    def retrofit = "2.9.0"
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"

    def paging_version = "3.1.1"

    implementation "androidx.paging:paging-runtime:$paging_version"

/*    implementation(Deps.dependencies.ijkplayerJava){
        exclude module: 'ijkplayer-java-0.8.8-runtime'
    }
    implementation(Deps.dependencies.ijkplayerArmV7a){
        exclude module: 'ijkplayer-java-0.8.8-runtime'
    }*/

/*    implementation(Deps.dependencies.ijkplayerExo){
        exclude module: 'ijkplayer-java'
    }*/

    //EXOPLAYER 用于ijkPlayer
    implementation 'com.google.android.exoplayer:exoplayer:r1.5.15'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    //字节layoutInspector
//    implementation "com.bytedance.tools.codelocator:codelocator-core:2.0.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

}